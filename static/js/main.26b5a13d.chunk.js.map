{"version":3,"sources":["components/Navbar.tsx","App.tsx","components/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/TableItem.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleTable.tsx","components/PeopleFilters.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["Navbar","getLinkClass","isActive","classNames","className","role","to","App","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","useSearchParams","searchParams","pathname","slug","search","toString","sex","name","TableItem","people","born","died","motherName","fatherName","getParent","useMemo","parentName","find","parent","mother","father","motherNameText","fatherNameText","useParams","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","PeopleTable","SortFields","Name","Sex","Born","Died","get","query","centuries","getAll","sort","order","preparedPeople","filtredAndSortedPeople","filter","lowerQuery","toLowerCase","str","includes","isQueryIncluded","length","Math","ceil","isBornInCentury","person1","person2","localeCompare","reverse","SortFieldsKeys","keys","map","field","PeopleFilters","setSearchParams","type","placeholder","onChange","e","target","century","c","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","isTableVisible","useEffect","data","catch","finally","NotFoundPage","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.26b5a13d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\n\nimport { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n  // const location = useLocation();\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${person.slug}`,\n        search: searchParams.toString(),\n        // search: location.search,\n      }}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n  people: Person[];\n};\n\nexport const TableItem: React.FC<Props> = ({ person, people }) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n\n  const getParent = useMemo(() => {\n    return (parentName: string | null) => {\n      return people.find(parent => parent.name === parentName);\n    };\n  }, [people]);\n\n  const mother = getParent(motherName);\n  const father = getParent(fatherName);\n  const motherNameText = motherName || '-';\n  const fatherNameText = fatherName || '-';\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': person.slug === slug,\n      })}\n    >\n      <td><PersonLink person={person} /></td>\n\n      <td>\n        {sex}\n      </td>\n\n      <td>\n        {born}\n      </td>\n\n      <td>\n        {died}\n      </td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : motherNameText}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : fatherNameText}\n      </td>\n    </tr>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { TableItem } from './TableItem';\nimport { SearchLink } from './SearchLink';\nimport { SortFieldsType } from '../types/SortFieldsType';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const SortFields: SortFieldsType = {\n    Name: 'name',\n    Sex: 'sex',\n    Born: 'born',\n    Died: 'died',\n  };\n\n  function isQueryIncluded(str = '', person: Person) {\n    return person.name.toLowerCase().includes(str)\n      || person.fatherName?.toLowerCase().includes(str)\n      || person.motherName?.toLowerCase().includes(str);\n  }\n\n  function isBornInCentury(centuries: string[] = [], person: Person) {\n    return !centuries.length\n      || centuries.includes(Math.ceil(person.born / 100).toString());\n  }\n\n  const [searchParams] = useSearchParams();\n  const sex = searchParams.get('sex');\n  const query = searchParams.get('query');\n  const centuries = searchParams.getAll('centuries') || [];\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n  const preparedPeople = useMemo(() => {\n    const filtredAndSortedPeople = people\n      .filter(person => {\n        const lowerQuery = query?.toLowerCase();\n\n        return (sex ? person.sex === sex : person)\n          && isQueryIncluded(lowerQuery, person)\n          && isBornInCentury(centuries, person);\n      })\n      .sort((person1, person2) => {\n        switch (sort) {\n          case SortFields.Name:\n          case SortFields.Sex:\n            return person1[sort].localeCompare(person2[sort]);\n\n          case SortFields.Born:\n          case SortFields.Died:\n            return person1[sort] - person2[sort];\n\n          default:\n            return 0;\n        }\n      });\n\n    if (order === 'desc') {\n      filtredAndSortedPeople.reverse();\n    }\n\n    return filtredAndSortedPeople;\n  }, [sex, query, centuries]);\n\n  const SortFieldsKeys = Object.keys(SortFields) as Array<keyof SortFieldsType>;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {SortFieldsKeys.map(field => {\n            return (\n              <th key={field}>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  {field}\n                  <SearchLink params={{\n                    sort: order === 'desc' && sort === SortFields[field]\n                      ? null\n                      : SortFields[field],\n                    order: sort === SortFields[field] && !order ? 'desc' : null,\n                  }}\n                  >\n                    <span className=\"icon\">\n                      <i className={classNames('fas', 'fa-sort', {\n                        'fa-sort-up': sort === SortFields[field] && !order,\n                        'fa-sort-down': sort === SortFields[field] && order,\n                      })}\n                      />\n                    </span>\n                  </SearchLink>\n                </span>\n              </th>\n            );\n          })}\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {preparedPeople.map(person => (\n          <TableItem\n            key={person.name}\n            person={person}\n            people={preparedPeople}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const centuriesValues = ['16', '17', '18', '19', '20'];\n  const sex = searchParams.get('sex');\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  function handleQueryChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setSearchParams(\n      getSearchWith(searchParams, { query: e.target.value || null }),\n    );\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={classNames({ 'is-active': !sex })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          className={classNames({ 'is-active': sex === 'm' })}\n          params={{ sex: 'm' }}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          className={classNames({ 'is-active': sex === 'f' })}\n          params={{ sex: 'f' }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n\n            {centuriesValues.map(century => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={classNames(\n                  'button',\n                  'mr-1',\n                  {\n                    'is-info': centuries.includes(century),\n                  },\n                )}\n                params={{\n                  centuries: centuries.includes(century)\n                    ? centuries.filter(c => c !== century)\n                    : [...centuries, century],\n                }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          to={{ search: '' }}\n          className=\"button is-link is-outlined is-fullwidth\"\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types/Person';\nimport { PeopleFilters } from './PeopleFilters';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const isTableVisible = !isLoading && !hasError && people.length > 0;\n\n  useEffect(() => {\n    getPeople()\n      .then(data => setPeople(data))\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {!isLoading && (\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n          )}\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {hasError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n              {!isLoading && !hasError && people.length === 0 && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {isTableVisible && <PeopleTable people={people} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const NotFoundPage = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","import {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\nconst root = createRoot(document.getElementById('root') as HTMLElement);\n\nroot.render(<Root />);\n"],"sourceRoot":""}